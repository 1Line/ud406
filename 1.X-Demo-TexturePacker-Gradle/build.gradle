import com.badlogic.gdx.tools.texturepacker.TexturePacker

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'org.robovm:robovm-gradle-plugin:1.8.0'
	    classpath "com.badlogicgames.gdx:gdx-tools:1.7.0"   // Needed for TexturePacker

    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "TexturePackerGradle"
        gdxVersion = '1.7.0'
        roboVMVersion = '1.8.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.6.0'
        aiVersion = '1.6.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "org.robovm:robovm-rt:$roboVMVersion"
        compile "org.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}

project(":html") {
    apply plugin: "gwt"
    apply plugin: "war"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        compile "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

    task texturePacker << {
            logger.info "Calling TexturePacker"
            // Qualified path needed because Gdx object is not initialized
            TexturePacker.process("android/assets/image-sprites", "android/assets/images", "gigagal.pack")
    }



    task texturePackerAsNeeded << {
        // TODO Figure out it if is ok hard code these
        def pack = new File("android/assets/images/gigagal.pack.png")
        def atlas = new File("android/assets/images/gigagal.pack.atlas")
        // If the texture pack doesn't exist, create it
        if (!pack.exists()) {
            logger.info "Pack doesn't exist. Generating..."
            project.tasks.texturePacker.execute()
        } else {
            logger.info "Pack exists. Checking to see if we need to regenerate"
            // Get the file times of the items in the sprites directory and check the times
            def time = pack.lastModified()
            def files = new File("android/assets/image-sprites")

            // Grab the last modified times, sort them, grab the last one
            def lastModified = files.listFiles().collect{ it.lastModified()}.sort()[-1]
            if (lastModified > time) {
                logger.info "Files have been modified. Regenerating..."

                pack.delete()
                atlas.delete()

                project.tasks.texturePacker.execute()
            } else {
                logger.info "No need to regenerate pack."
            }
        }
    }

    project.tasks.compileJava.dependsOn texturePackerAsNeeded
}

tasks.eclipse.doLast {
    delete ".project"
}

